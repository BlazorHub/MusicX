@page "/songslist/"
@page "/songslist/{PageNumber:int}"
@page "/songslist/{SearchTerms}/{PageNumber:int}"
@using MusicX.Web.Shared.Songs
@inject IUriHelper UriHelper;

<ErrorsList Errors=@this.response?.Errors />

@if (this.response?.Data?.Songs == null)
{
    <p><em>Loading...</em></p>
}
else if (!this.response.Data.Songs.Any())
{
    <p><em>No songs found.</em></p>
}
else
{
     foreach (var song in this.response.Data.Songs)
     {
         <div class="card d-inline-block align-top" style="width: 13rem;">
             <img class="card-img-top" src="@song.ImageUrl" alt="Card image cap">
             <div class="card-body">
                 <h5 class="card-title">@song.SongName</h5>
                 <p class="card-text"></p>
                 @if (!string.IsNullOrWhiteSpace(song.PlayableUrl))
                 {
                     <button class="btn btn-success" onclick="@(() => this.MediaPlayer.AddAndPlay(song))"><i class="fas fa-play"></i></button>
                     <button class="btn btn-secondary" onclick="@(() => this.MediaPlayer.Add(song))"><i class="fas fa-plus"></i></button>
                 }
             </div>
         </div>
     }
    <div class="clear-fix"></div>
    for (var i = 1; i <= this.response?.Data.Pages; i++)
    {
        var currentIndex = i;
        if (!string.IsNullOrWhiteSpace(this.SearchTerms))
        {
            <a class="btn btn-primary" href="songslist/@this.SearchTerms/@i" onclick="@(() => this.ChangePage(currentIndex))">@i</a>
        }
        else
        {
            <a class="btn btn-primary" href="songslist/@i" onclick="@(() => this.ChangePage(currentIndex))">@i</a>
        }
    }
}

@functions {
    [Parameter]
    private int PageNumber { get; set; } = 1;

    [Parameter]
    private string SearchTerms { get; set; } = string.Empty;

    ApiResponse<SongsListResponseModel> response;

    protected override async Task OnInitAsync()
    {
        this.response = await this.ApiClient.GetSongsList(this.PageNumber, this.SearchTerms);
    }

    async Task ChangePage(int page)
    {
        this.PageNumber = page;
        this.response = await this.ApiClient.GetSongsList(page, this.SearchTerms);
    }
}
